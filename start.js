const { existsSync, readFileSync } = require('fs');
const { join, resolve } = require('path');
const { Bootstrap } = require('@midwayjs/bootstrap');

async function main() {
  // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º CA –°–ê–ú–´–ú –ü–ï–†–í–´–ú
  const caPath = resolve(join(__dirname, 'scylla-ca.crt'));
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º CA —Ñ–∞–π–ª:', caPath);

  if (!existsSync(caPath)) {
    console.error('‚ùå –§–∞–π–ª scylla-ca.crt –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    console.log('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:', require('fs').readdirSync(__dirname));
    process.exit(1);
  }

  const scyllaCa = readFileSync(caPath);
  console.log('üü¢ CA –∑–∞–≥—Ä—É–∂–µ–Ω (—Ä–∞–∑–º–µ—Ä:', scyllaCa.length, '–±–∞–π—Ç)');

  // 2. –°–æ–∑–¥–∞–µ–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  const app = Bootstrap.configure({
    appDir: __dirname,
    imports: require('./dist/configuration'),
    globalConfig: {
      scyllaCa: scyllaCa // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º CA —á–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥
    }
  });

  // 3. –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  try {
    await app.run();
    console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', err);
    process.exit(1);
  }
}

main();