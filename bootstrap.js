const { Bootstrap } = require('@midwayjs/bootstrap');
const { join } = require('path');
const { readFileSync, existsSync } = require('fs');

// 1. –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ CA —Å –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
function loadScyllaCA() {
  const caPath = join(__dirname, 'scylla-ca.crt');
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º CA —Ñ–∞–π–ª –ø–æ –ø—É—Ç–∏:', caPath);

  if (!existsSync(caPath)) {
    console.error('‚ùå –§–∞–π–ª scylla-ca.crt –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    console.error('–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:', __dirname);
    console.error('–ü–æ–ª–Ω—ã–π –ø—É—Ç—å:', require('path').resolve(caPath));
    process.exit(1);
  }

  try {
    const caContent = readFileSync(caPath);
    console.log('üü¢ CA —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω, —Ä–∞–∑–º–µ—Ä:', caContent.length, '–±–∞–π—Ç');
    return caContent;
  } catch (e) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è CA —Ñ–∞–π–ª–∞:', e.message);
    process.exit(1);
  }
}

// 2. –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
console.log('‚è≥ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é Midway...');
const originalCreate = Bootstrap.create;
Bootstrap.create = function() {
  console.log('üõ† –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º CA...');
  const container = originalCreate.apply(this, arguments);
  container.registerObject('scyllaCa', loadScyllaCA());
  return container;
};

// 3. –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
Bootstrap.run()
  .then(() => console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ'))
  .catch(err => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', err);
    process.exit(1);
  });

console.log('üöÄ Bootstrap –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω');